name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build WebApp
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Node Packages
        run: npm ci --no-fund
      - name: Build Node App
        run: npm run build
      - name: Upload Build Assets
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build
          retention-days: 90
  docker:
    name: Build and Publish Docker Image
    runs-on: ubuntu-20.04
    env:
      REPO: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Login to Docker Registry
        run: docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }}
          -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: |
          echo VITE_HTML_TITLE="${{ secrets.VITE_HTML_TITLE }}" >> .env
          echo VITE_HTML_DESCRIPTION="${{ secrets.VITE_HTML_DESCRIPTION }}" >> .env
          echo VITE_IMPRINT_ADDRESS="${{ secrets.VITE_IMPRINT_ADDRESS }}" >> .env
          echo VITE_IMPRINT_CONTACT="${{ secrets.VITE_IMPRINT_CONTACT }}" >> .env
          echo VITE_APP_DOWNLOAD_URL=${{ secrets.VITE_APP_DOWNLOAD_URL }} >> .env
          echo VITE_API_ENDPOINT=${{ secrets.VITE_API_ENDPOINT}} >> .env
          echo VITE_API_TIMEOUT=${{ secrets.VITE_API_TIMEOUT}} >> .env
          echo VITE_WS_ENDPOINT=${{ secrets.VITE_WS_ENDPOINT}} >> .env
          echo VITE_WS_RECONNECT_TIMEOUT=${{ secrets.VITE_WS_RECONNECT_TIMEOUT}} >> .env
          docker build $(./deployment/docker/utils/build-args.sh .env) -t $REPO:release-${{ github.event.release.tag_name }} -t $REPO:latest .
          rm .env
      - name: Publish Docker Image
        run: |
          docker push $REPO:release-${{ github.event.release.tag_name }}
          docker push $REPO:latest
  deploy:
    name: Deploy Webhook Call
    runs-on: ubuntu-20.04
    needs: [build, docker]
    steps:
      - name: Deploy Docker Container Webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.DEPLOY_WEBHOOK_URL }}
          body: '{"repository": "${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}", "tag": "release-${{ github.event.release.tag_name }}"}'
